cwlVersion: v1.2
class: Workflow
label: PrediXcan
doc: |-
  Predict.py has been wrapped in cwl, getting the information from: https://github.com/hakyimlab/MetaXcan/wiki/Individual-level-PrediXcan:-introduction,-tutorials-and-manual

  Here is a snippet from: https://github.com/hakyimlab/MetaXcan/wiki/Individual-level-PrediXcan:-introduction,-tutorials-and-manual

  In the following, we focus on the individual-level implementation of PrediXcan.

  The method was originally implemented in this repository.

  PrediXcan consists of two steps:

  Predict gene expression (or whatever biology the models predict) in a cohort with available genotypes
  Run associations to a trait measured in the cohort

  The first step is implemented in Predict.py. 
  The prediction models are trained and pre-compiled on specific data sets with their own human genome releases and variant definitions. We implemented a few rules to support variant matching from genotypes based on different variant definitions. In the following, mapping refers to the process of assigning a model variant to a genotype variant.

  Originally, PrediXcan was applied to genes so we say "gene expression" a lot as it was the mechanism we initially studied. But conceptually, everything said here applies to any intermediate/molecular mechanism such as splicing or brain morphology. Whenever we say "gene", it generally could mean a splicing intron event, etc.
$namespaces:
  sbg: https://sevenbridges.com

requirements:
- class: InlineJavascriptRequirement
- class: StepInputExpressionRequirement

inputs:
- id: kinship_matrix
  doc: |-
    A text delimited file with a .txt file extension or an R data file with a .RData file extension containing a matrix of size M × M, where rows and columns are the sample/subject IDs
  type: File?
  sbg:x: -281.2381591796875
  sbg:y: -169.05604553222656
- id: phenotype_file
  doc: |-
    [REQUIRED] A text delimited file with a .txt file extension containing a matrix of size M + 1 × C + 1, where M >= N and is the number of samples for which covariate data is provided.
  type: File?
  sbg:x: -274.80218505859375
  sbg:y: -302.4640197753906
- id: model_db_path
  doc: Path to a SQlite file containing prediction models.
  type: File?
  sbg:x: -623
  sbg:y: 12
- id: main_phenotype_of_interest
  doc: |-
    [REQUIRED] A string value defining the column name of the phenotype of interest. Should be a dichotomous or continuous variable. Please enter in exactly as it appears in phenotype file not surrounded by quotations. 
    ex) main_interest

    If dichotomous, make sure that in the file the main phenotype of interest is coded as a categorical variable where 0 is absence and 1 is presence of phenotype of interest. 0 will then be the reference and the output will reflect this.
  type: string
  sbg:exposed: true
- id: output_prefix
  doc: '[REQUIRED] File name prefix for output files.'
  type: string
  sbg:exposed: true
- id: covariates
  doc: |-
    Please type in the column names of any additional covariates you would like to account for. Please input covariates exactly as they appear in the phenotype file with quotations around each input and separate by a comma, no spaces.
    ex) "sex","age","PC1"
  type: string
  sbg:exposed: true
- id: prediction_summary_output
  doc: |-
    A separate file that will contain some additional information on the predictions (such as number of snps in the gene's models, number of snps used, etc).
  type: string
  sbg:exposed: true
- id: prediction_output
  doc: Specify output (and output type) of predicted expression matrix
  type: string
  sbg:exposed: true
- id: on_the_fly_mapping
  doc: |-
    Optional. Specify a pattern to build a variant id from genotype variant properties. e.g. --on_the_fly_mapping METADATA "chr{}_{}_{}_{}_b38" will take the genotype variant's chromosome, position, alleles to build a variant id like chr1_123_A_G_b38. This will use the genotype properties, or if liftover is specified, the lifted coordinates.
  type: string?
  sbg:exposed: true
- id: model_db_snp_key
  doc: |-
    Optional. If provided, will load variant ids from an alternative column in the db. By default, PrediXcan uses rsids, and this works with Elastic Net models. For the more sophisticated MASHR models, --model_db_snp_key varID must be specified with this argument.
  type: string?
  sbg:exposed: true
- id: vcf_mode
  doc: |-
    -"genotyped" is meant for phased, genotyped vcfs that contain counts of each allele at each chromosome pair.
    -"imputed" will load DS field as dosage. This is meant to work with imputed vcfs as generated by the Michigan Imputation Server.
  type: string?
  sbg:exposed: true
- id: vcf_genotypes
  doc: Pattern of vcf genotype files.
  type: File[]?
  sbg:x: -620
  sbg:y: -137

outputs:
- id: Association_output
  type: File
  outputSource:
  - association/Association_output
  sbg:x: 180
  sbg:y: -100
- id: summary
  type: File?
  outputSource:
  - predict/summary
  sbg:x: -241
  sbg:y: 62

steps:
- id: predict
  label: Predict
  in:
  - id: model_db_path
    source: model_db_path
  - id: vcf_genotypes
    source:
    - vcf_genotypes
  - id: vcf_mode
    source: vcf_mode
  - id: prediction_summary_output
    source: prediction_summary_output
  - id: prediction_output
    source: prediction_output
  - id: model_db_snp_key
    source: model_db_snp_key
  - id: on_the_fly_mapping
    source: on_the_fly_mapping
  run:
    cwlVersion: v1.2
    class: CommandLineTool
    label: Predict
    $namespaces:
      sbg: https://sevenbridges.com

    requirements:
    - class: ShellCommandRequirement
    - class: DockerRequirement
      dockerPull: images.sb.biodatacatalyst.nhlbi.nih.gov/e.esquinca/ind_level_predixcan:dev
    - class: InlineJavascriptRequirement

    inputs:
    - id: model_db_path
      doc: Path to a SQlite file containing prediction models.
      type: File
      inputBinding:
        prefix: --model_db_path
        position: 0
        shellQuote: false
    - id: vcf_genotypes
      doc: Pattern of vcf genotype files.
      type: File[]?
      inputBinding:
        prefix: --vcf_genotypes
        position: 0
        shellQuote: false
    - id: vcf_mode
      doc: |-
        -"genotyped" is meant for phased, genotyped vcfs that contain counts of each allele at each chromosome pair.
        -"imputed" will load DS field as dosage. This is meant to work with imputed vcfs as generated by the Michigan Imputation Server.
      type: string?
      inputBinding:
        prefix: --vcf_mode
        position: 0
        shellQuote: false
    - id: prediction_summary_output
      doc: |-
        A separate file that will contain some additional information on the predictions (such as number of snps in the gene's models, number of snps used, etc).
      type: string
      inputBinding:
        prefix: --prediction_summary_output
        position: 0
        shellQuote: false
    - id: prediction_output
      doc: Specify output (and output type) of predicted expression matrix
      type: string
      inputBinding:
        prefix: --prediction_output
        position: 0
        shellQuote: false
    - id: verbosity
      doc: |-
        This value will change the amount of detail displayed. Default value is 9. Change to a smaller number to receive more detail about prediction.
      type: int?
      default: 9
      inputBinding:
        prefix: --verbosity
        position: 0
        shellQuote: false
    - id: model_db_snp_key
      doc: |-
        Optional. If provided, will load variant ids from an alternative column in the db. By default, PrediXcan uses rsids, and this works with Elastic Net models. For the more sophisticated MASHR models, --model_db_snp_key varID must be specified with this argument.
      type: string?
      inputBinding:
        prefix: --model_db_snp_key
        position: 0
        shellQuote: false
    - id: on_the_fly_mapping
      doc: |-
        Optional. Specify a pattern to build a variant id from genotype variant properties. e.g. --on_the_fly_mapping METADATA "chr{}_{}_{}_{}_b38" will take the genotype variant's chromosome, position, alleles to build a variant id like chr1_123_A_G_b38. This will use the genotype properties, or if liftover is specified, the lifted coordinates.
      type: string?
      inputBinding:
        position: 0
        shellQuote: false
    - id: text_genotypes
      doc: |-
        Use the text format as specified by: https://github.com/hakyimlab/MetaXcan/wiki/Individual-level-PrediXcan:-introduction,-tutorials-and-manual
      type: File?
      inputBinding:
        prefix: --text_genotypes
        position: 0
        shellQuote: false
    - id: text_sample_ids
      doc: |-
        A file specifying samples. If specified alongside bgen or vcf, will use the file's IDs instead of the ones in the vcf or bgen.
      type: File?
      inputBinding:
        prefix: --text_sample_ids
        position: 0
        shellQuote: false

    outputs:
    - id: prediction
      type: File?
      outputBinding:
        glob: $(inputs.prediction_output)
    - id: summary
      type: File?
      outputBinding:
        glob: $(inputs.prediction_summary_output)

    baseCommand:
    - python3
    - /opt/MetaXcan/software/Predict.py
    arguments:
    - prefix: ''
      position: 9999
      valueFrom: --throw
      separate: false
      shellQuote: false

    hints:
    - class: sbg:SaveLogs
      value: standard.out
    - class: sbg:SaveLogs
      value: '*.sh'
    - class: sbg:SaveLogs
      value: '*.py'
    id: e.esquinca/individual-level-predixcan-development/predict/27
    sbg:appVersion:
    - v1.2
    sbg:content_hash: a290e9b15e12cb740979f9aec4d820aa48f2fc40b46afc70f3024339432a5c339
    sbg:contributors:
    - e.esquinca
    sbg:createdBy: e.esquinca
    sbg:createdOn: 1623963857
    sbg:id: e.esquinca/individual-level-predixcan-development/predict/27
    sbg:image_url:
    sbg:latestRevision: 27
    sbg:modifiedBy: e.esquinca
    sbg:modifiedOn: 1630283684
    sbg:project: e.esquinca/individual-level-predixcan-development
    sbg:projectName: 'BUILD: Individual Level PrediXcan Development'
    sbg:publisher: sbg
    sbg:revision: 27
    sbg:revisionNotes: updated descriptions
    sbg:revisionsInfo:
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1623963857
      sbg:revision: 0
      sbg:revisionNotes:
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1623964298
      sbg:revision: 1
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1623965791
      sbg:revision: 2
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1623975522
      sbg:revision: 3
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624395875
      sbg:revision: 4
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624398812
      sbg:revision: 5
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624473667
      sbg:revision: 6
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624474304
      sbg:revision: 7
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624484331
      sbg:revision: 8
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624484486
      sbg:revision: 9
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624487042
      sbg:revision: 10
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624487314
      sbg:revision: 11
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624561938
      sbg:revision: 12
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624562453
      sbg:revision: 13
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624567552
      sbg:revision: 14
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1624567938
      sbg:revision: 15
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625614955
      sbg:revision: 16
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625617437
      sbg:revision: 17
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625617458
      sbg:revision: 18
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626120935
      sbg:revision: 19
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627073868
      sbg:revision: 20
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627589721
      sbg:revision: 21
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627589974
      sbg:revision: 22
      sbg:revisionNotes: separate output globs
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627590577
      sbg:revision: 23
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627600358
      sbg:revision: 24
      sbg:revisionNotes: temp disable on the fly
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627600880
      sbg:revision: 25
      sbg:revisionNotes: temp disable of on the fly
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627601574
      sbg:revision: 26
      sbg:revisionNotes: put on the fly back in
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630283684
      sbg:revision: 27
      sbg:revisionNotes: updated descriptions
    sbg:sbgMaintained: false
    sbg:validationErrors: []
  out:
  - id: prediction
  - id: summary
  sbg:x: -429.8598937988281
  sbg:y: -27.58841323852539
- id: association
  label: Association
  in:
  - id: gene_expression_file
    source: predict/prediction
  - id: main_phenotype_of_interest
    source: main_phenotype_of_interest
  - id: output_prefix
    source: output_prefix
  - id: kinship_matrix
    source: kinship_matrix
  - id: phenotype_file
    source: phenotype_file
  - id: covariates
    source: covariates
  run:
    cwlVersion: v1.2
    class: CommandLineTool
    label: Association
    $namespaces:
      sbg: https://sevenbridges.com

    requirements:
    - class: ShellCommandRequirement
    - class: DockerRequirement
      dockerPull: r-base
    - class: InitialWorkDirRequirement
      listing:
      - entryname: Lmekin_Code.R
        writable: false
        entry: |-
          # Lmekin & Lm Code
          
          # Erika Esquinca
          # Last Modified: 8/29/21
          
          
          install.packages("coxme")
          install.packages("dplyr")
          install.packages("data.table")
          install.packages("optparse")
          
          # Load libraries 
          library(coxme, quietly = T)
          library(dplyr, quietly = T)
          library(data.table, quietly = T)
          library(optparse, quietly = T)
          
          # Generate usage doc and retrieve command line args
          
          p <- OptionParser(usage = "\n%prog [options] --gene_expression_file <gene_expression_file> --output_prefix <output_prefix>                  --phenotype_file <phenotype_file>",
                            description = "\n Association of Predicted Gene Expression Values)\n\nRun the association using the R interface.",
                            prog = "Rscript Lmekin_Code.R")
          
          p <- add_option(object = p, opt_str = c("--output_prefix"), default = NULL, type = "character",
                          help = "[REQUIRED] File name prefix for output files.")
          
          p <- add_option(object = p, opt_str = c("--gene_expression_file"), default = NULL, type = "character",
                          help = "[REQUIRED] A text delimited file with .txt file extension containing N + 1 rows and G + 2 columns, where N is the number of samples, and G is the number of genes. The first row must contain the headers and the first two columns contain the Individual ID (IID) & the Family ID (FID) followed by genes respectively. Should be the predict output from Predict.py. If there is not FID repeat the IID column.")
          
          p <- add_option(object = p, opt_str = c("--phenotype_file"),
                          help = "[REQUIRED] A text delimited file with a .txt file extension containing a matrix of size M + 1 × C + 1, where M >= N and is the number of samples for which covariate data is provided.")
          
          
          p <- add_option(object = p, opt_str = c("--kinship_matrix"),
                          help = "A text delimited file with a .txt file extension or an R data file with a .RData file extension containing a matrix of size M × M, where rows and columns are the sample/subject IDs")
          
          argv <- parse_args(p)
          
          
          # Check if positional arguments were given 
          if(is.null(argv$gene_expression_file)){
            stop("Error: Please provide a value for --gene_expression_file")
          }
          if(is.null(argv$output_prefix)){
            stop("Error: Please provide a value for --output_prefix")
          }
          if(is.null(argv$phenotype_file)){
            stop("Error: Please provide a value for --phenotype_file")
          }
          
          
          # Get inputs from user
          source("cwl_inputs.R")
          
          # Load Gene Expression Data
          cat(paste0("Loading data from ", argv$gene_expression_file, " ..."))
          ge.data <- read.table(file = argv$gene_expression_file, sep = "\t", header = T)
          
          n.samples <- nrow(ge.data)
          n.features <- ncol(ge.data)
          cat("Done.\n")
          cat(paste0("Loaded gene expression data with ", n.samples, " rows and ", 
                     n.features, " genes.\n"))
          
          
          # Load Phenotype file
          cat(paste0("Loading data from ", argv$phenotype_file, " ..."))
          
          pheno.data <- read.table(file = argv$phenotype_file, sep = "\t", header = T)
          cat("Done.\n")
          #cat(paste0("Loaded phenotype data with ", blank, " rows and ", 
          #           blank, " columns.\n"))
          
          
          
          ## STEPS
          
          #### inner_join gene expression and phenotypes both should have IID column
          
          data <- inner_join(pheno.data, ge.data, by = "IID")
          
          # Set blanks to NA
          data[data == ""] <- NA
          
          
          ### Define these in the function
          # gene_names = the list of gene names that the function iterates over
          # covs = list of covariates
          # main_pheno = name of main association variable
          # df = data frame including the samples down the rows, and phenotype variables followed by gene names across the columns
          # id = name of person/sample ID variable that matches between the ge.data, pheno.data, and kinship matrix
          # kinship = the kinship matrix if given will do lmekin instead of lm
          
          
          # List of tests we want to make
          # ie: names of gene columns, this is what we're looping over in the function
          # If there's time I will make this an additonal input
          
          genes <- colnames(ge.data)[3:ncol(ge.data)] 
          
          
          ##########################################################
          # Now if a kinship matrix is included we want to use lmekin
          #
          if(!is.null(argv$kinship_matrix)){
            
            # Load Kinship Matrix
            if(grepl(x = argv$kinship_matrix, pattern = "\\.RData$", perl = T)){ 
              load(argv$kinship_matrix)
            }
            
            if(grepl(x = argv$kinship_matrix, pattern = "\\.txt$", perl = T)){
              
              kin <-  read.table(file = argv$kinship_matrix, sep = "\t", header = T,
                                 row.names = 1)
            }
          
          
          # lmekin function
          lmekin.script = function(gene_names, covs, main_pheno, df, id, kinship){
            
            # Define model formula
            fml <- as.formula(paste0(gene_names,"~",paste0(main_pheno,"+"), paste0(covs,collapse="+"),"+ (1|",id,")"))
            
            # FYI second way to generate formula
            #form = reformulate(c(main, covs,"(1|numberID)"), response = g)
            
            #run linear mixed model and save model output
            mod = coxme::lmekin(fml, data=df, varlist = as.matrix(kinship))
            
            #define model output for writing out results
            # note that we are saving the first variable in the table only, so will only work for a dichotomous or continuous phenotype. 
            # If someone used a categorical variable with more than 2 levels, they would only get the first row of estimates as currently coded.
            
            beta <- as.numeric(mod$coefficients$fixed)  
            nvar <- length(beta)
            nfrail <- nrow(mod$var) - nvar
            se <- as.numeric(sqrt(diag(mod$var)[nfrail + 1:nvar]))
            z <- as.numeric(round(beta/se, 5))
            p <- as.numeric(signif(1-pchisq((beta/se)^2,1), 5))
            n <- mod$n
            
            beta.lme = as.numeric(beta[2])
            se.lme = as.numeric(se[2])
            z.lme = as.numeric(z[2])
            pval.lme = as.numeric(p[2])
            covariates = paste(covs,collapse=",")
            
            results = data.frame(gene_names, n, main_pheno, covariates, beta.lme, se.lme, z.lme, pval.lme)
            
            return(results)
          }
          
          
          # Call function, define function parameters, and create output data frame in two steps
          results.list = lapply(X = genes, FUN = lmekin.script,
                                covs = covs_input,
                                main_pheno = main_pheno_input,
                                df=data,
                                id="numberID",
                                kinship=kin)
          results = dplyr::bind_rows(results.list)
          
          
          
          # Write Results
          cat("Exporting results ... ")
          write.table(results, file = paste0(argv$output_prefix, "_lmekin_results.txt"),
                      col.names = T,
                      row.names = F,
                      quote = F,
                      sep = "\t")
          cat("Done.\n")
          
          }
          
          # If no kinship matrix is included, use lm 
          if(is.null(argv$kinship_matrix)){
            
            # Make sure main pheno is factor to be categorical in lm; required in description
          
            lm.script = function(gene_names, covs, main_pheno, df){
              
              # Define model formula
              fml <- as.formula(paste0(gene_names,"~",paste0(main_pheno,"+"), paste0(covs,collapse="+")))
            
              
              #run linear mixed model and save model output
              # Will automatically make smallest number reference category
              mod = lm(fml, data=df)
              
              #define model output for writing out results
              # note that we are saving the first variable in the table only, so will only work for a dichotomous or continuous phenotype. 
              # If someone used a categorical variable with more than 2 levels, they would only get the first row of estimates as currently coded.
              
              beta.lm <- as.numeric(mod$coefficients[2])  
              se.lm <- as.numeric(summary(mod)$coefficients[2,2])
              t.lm<- as.numeric(summary(mod)$coefficients[2,3])
              pval.lm <- as.numeric(summary(mod)$coefficients[2,4])
              covariates = paste(covs,collapse=",")
              n <- nobs(mod)
              
              results = data.frame(gene_names, n, main_pheno, covariates, beta.lm, se.lm, t.lm, pval.lm)
              
              return(results)
            }
            
            
            # Call function, define function parameters, and create output data frame in two steps
            results.list = lapply(X = genes, FUN = lm.script,
                                  covs = covs_input,
                                  main_pheno = main_pheno_input,
                                  df=data)
            results = dplyr::bind_rows(results.list)
            
            
            
            # Write Results
            cat("Exporting results ... ")
            write.table(results, file = paste0(argv$output_prefix, "_lm_results.txt"),
                        col.names = T,
                        row.names = F,
                        quote = F,
                        sep = "\t")
            cat("Done.\n")   
            
            
          }
      - entryname: cwl_inputs.R
        writable: false
        entry: |2-

          covs_input = c($(inputs.covariates))

          main_pheno_input = "$(inputs.main_phenotype_of_interest)"
    - class: InlineJavascriptRequirement

    inputs:
    - id: gene_expression_file
      doc: |-
        [REQUIRED] A text delimited file with .txt file extension containing N + 1 rows and G + 2 columns, where N is the number of samples, and G is the number of genes. The first row must contain sample IDs and the first two columns contain the IID & FID followed by feature IDs respectively. Should be the predict output from Predict.py

        Make sure phenotype file and gene expression file have matching IID column.
      type: File
      inputBinding:
        prefix: --gene_expression_file
        position: 0
        shellQuote: false
    - id: main_phenotype_of_interest
      doc: |-
        [REQUIRED] A string value defining the column name of the phenotype of interest. Should be a dichotomous or continuous variable. Please enter in exactly as it appears in phenotype file not surrounded by quotations. 
        ex) main_interest

        If dichotomous, make sure that in the file the main phenotype of interest is coded as a categorical variable where 0 is absence and 1 is presence of phenotype of interest. 0 will then be the reference and the output will reflect this.
      type: string
    - id: output_prefix
      doc: '[REQUIRED] File name prefix for output files.'
      type: string
      inputBinding:
        prefix: --output_prefix
        position: 0
        shellQuote: false
    - id: kinship_matrix
      doc: |-
        A text delimited file with a .txt file extension or an R data file with a .RData file extension containing a matrix of size M × M, where rows and columns are the sample/subject IDs
      type: File?
      inputBinding:
        prefix: --kinship_matrix
        position: 0
        shellQuote: false
    - id: phenotype_file
      doc: |-
        [REQUIRED] A text delimited file with a .txt file extension containing a matrix of size M + 1 × C + 1, where M >= N and is the number of samples for which covariate data is provided.

        Make sure phenotype file and gene expression file have matching IID column.
      type: File
      inputBinding:
        prefix: --phenotype_file
        position: 0
        shellQuote: false
    - id: covariates
      doc: |-
        Please type in the column names of any additional covariates you would like to account for. Please input covariates exactly as they appear in the phenotype file with quotations around each input and separate by a comma, no spaces.
        ex) "sex","age","PC1"
      type: string

    outputs:
    - id: Association_output
      type: File
      outputBinding:
        glob: '*_results.txt'

    baseCommand:
    - Rscript
    - Lmekin_Code.R

    hints:
    - class: sbg:SaveLogs
      value: '*.R'
    - class: sbg:SaveLogs
      value: standard.out
    id: e.esquinca/individual-level-predixcan-development/association/50
    sbg:appVersion:
    - v1.2
    sbg:content_hash: ad03370641e4d2de6f09d43135d407b6ce3cfba5991d8ad578a6c89f4b9e03706
    sbg:contributors:
    - e.esquinca
    sbg:createdBy: e.esquinca
    sbg:createdOn: 1625775902
    sbg:id: e.esquinca/individual-level-predixcan-development/association/50
    sbg:image_url:
    sbg:latestRevision: 50
    sbg:modifiedBy: e.esquinca
    sbg:modifiedOn: 1630283238
    sbg:project: e.esquinca/individual-level-predixcan-development
    sbg:projectName: 'BUILD: Individual Level PrediXcan Development'
    sbg:publisher: sbg
    sbg:revision: 50
    sbg:revisionNotes: ''
    sbg:revisionsInfo:
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625775902
      sbg:revision: 0
      sbg:revisionNotes:
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625777612
      sbg:revision: 1
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625778258
      sbg:revision: 2
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625779281
      sbg:revision: 3
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625780462
      sbg:revision: 4
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625781379
      sbg:revision: 5
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1625784170
      sbg:revision: 6
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626283266
      sbg:revision: 7
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626283409
      sbg:revision: 8
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626285829
      sbg:revision: 9
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626287901
      sbg:revision: 10
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626289048
      sbg:revision: 11
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626291663
      sbg:revision: 12
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626291914
      sbg:revision: 13
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626292737
      sbg:revision: 14
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626293172
      sbg:revision: 15
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626293572
      sbg:revision: 16
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626293675
      sbg:revision: 17
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626294501
      sbg:revision: 18
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626295268
      sbg:revision: 19
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626295693
      sbg:revision: 20
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626296250
      sbg:revision: 21
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626366680
      sbg:revision: 22
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626380399
      sbg:revision: 23
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626380771
      sbg:revision: 24
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1626381561
      sbg:revision: 25
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627319265
      sbg:revision: 26
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627321040
      sbg:revision: 27
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627322834
      sbg:revision: 28
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627348710
      sbg:revision: 29
      sbg:revisionNotes: testing data
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627348742
      sbg:revision: 30
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627350003
      sbg:revision: 31
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627350349
      sbg:revision: 32
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627351108
      sbg:revision: 33
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627352173
      sbg:revision: 34
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627410480
      sbg:revision: 35
      sbg:revisionNotes: test using bash
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627410844
      sbg:revision: 36
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627411436
      sbg:revision: 37
      sbg:revisionNotes: back to r-base
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627411821
      sbg:revision: 38
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627412474
      sbg:revision: 39
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627413782
      sbg:revision: 40
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627414240
      sbg:revision: 41
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1627422196
      sbg:revision: 42
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630279141
      sbg:revision: 43
      sbg:revisionNotes: updated requirements and descriptions
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630279278
      sbg:revision: 44
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630279637
      sbg:revision: 45
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630279972
      sbg:revision: 46
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630281140
      sbg:revision: 47
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630281629
      sbg:revision: 48
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630282714
      sbg:revision: 49
      sbg:revisionNotes: ''
    - sbg:modifiedBy: e.esquinca
      sbg:modifiedOn: 1630283238
      sbg:revision: 50
      sbg:revisionNotes: ''
    sbg:sbgMaintained: false
    sbg:validationErrors: []
  out:
  - id: Association_output
  sbg:x: -71
  sbg:y: -100
id: |-
  https://api.sb.biodatacatalyst.nhlbi.nih.gov/v2/apps/e.esquinca/individual-level-predixcan-development/predicton/5/raw/
sbg:appVersion:
- v1.2
sbg:content_hash: af869e41eba0400c64bdf77ca22182cca644cf084c29981a11ec71cb9c66032fa
sbg:contributors:
- e.esquinca
sbg:createdBy: e.esquinca
sbg:createdOn: 1627587499
sbg:id: e.esquinca/individual-level-predixcan-development/predicton/5
sbg:image_url: |-
  https://platform.sb.biodatacatalyst.nhlbi.nih.gov/ns/brood/images/e.esquinca/individual-level-predixcan-development/predicton/5.png
sbg:latestRevision: 5
sbg:modifiedBy: e.esquinca
sbg:modifiedOn: 1630284836
sbg:project: e.esquinca/individual-level-predixcan-development
sbg:projectName: 'BUILD: Individual Level PrediXcan Development'
sbg:publisher: sbg
sbg:revision: 5
sbg:revisionNotes: ''
sbg:revisionsInfo:
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1627587499
  sbg:revision: 0
  sbg:revisionNotes:
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1627588804
  sbg:revision: 1
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1627591230
  sbg:revision: 2
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1630283904
  sbg:revision: 3
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1630284414
  sbg:revision: 4
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1630284836
  sbg:revision: 5
  sbg:revisionNotes: ''
sbg:sbgMaintained: false
sbg:validationErrors: []
