cwlVersion: v1.2
class: Workflow
label: PrediXcan
doc: |-
  Predict.py has been wrapped in cwl, getting the information from: https://github.com/hakyimlab/MetaXcan/wiki/Individual-level-PrediXcan:-introduction,-tutorials-and-manual

  Here is a snippet from: https://github.com/hakyimlab/MetaXcan/wiki/Individual-level-PrediXcan:-introduction,-tutorials-and-manual

  In the following, we focus on the individual-level implementation of PrediXcan.

  The method was originally implemented in this repository.

  PrediXcan consists of two steps:

  Predict gene expression (or whatever biology the models predict) in a cohort with available genotypes
  Run associations to a trait measured in the cohort

  The first step is implemented in Predict.py. 
  The prediction models are trained and pre-compiled on specific data sets with their own human genome releases and variant definitions. We implemented a few rules to support variant matching from genotypes based on different variant definitions. In the following, mapping refers to the process of assigning a model variant to a genotype variant.

  Originally, PrediXcan was applied to genes so we say "gene expression" a lot as it was the mechanism we initially studied. But conceptually, everything said here applies to any intermediate/molecular mechanism such as splicing or brain morphology. Whenever we say "gene", it generally could mean a splicing intron event, etc.
$namespaces:
  sbg: https://sevenbridges.com

requirements:
- class: InlineJavascriptRequirement
- class: StepInputExpressionRequirement

inputs:
- id: kinship_matrix
  doc: |-
    A text delimited file with a .txt file extension or an R data file with a .RData file extension containing a matrix of size M × M, where rows and columns are the sample/subject IDs
  type: File?
  sbg:x: -281.2381591796875
  sbg:y: -169.05604553222656
- id: phenotype_file
  doc: |-
    [REQUIRED] A text delimited file with a .txt file extension containing a matrix of size M + 1 × C + 1, where M >= N and is the number of samples for which covariate data is provided.
  type: File?
  sbg:x: -274.80218505859375
  sbg:y: -302.4640197753906
- id: model_db_path
  doc: Path to a SQlite file containing prediction models.
  type: File?
  sbg:x: -623
  sbg:y: 12
- id: main_phenotype_of_interest
  doc: |-
    [REQUIRED] A string value defining the column name of the phenotype of interest. Should be a dichotomous or continuous variable. Please enter in exactly as it appears in phenotype file not surrounded by quotations. 
    ex) main_interest

    If dichotomous, make sure that in the file the main phenotype of interest is coded as a categorical variable where 0 is absence and 1 is presence of phenotype of interest. 0 will then be the reference and the output will reflect this.
  type: string
  sbg:exposed: true
- id: output_prefix
  doc: '[REQUIRED] File name prefix for output files.'
  type: string
  sbg:exposed: true
- id: covariates
  doc: |-
    Please type in the column names of any additional covariates you would like to account for. Please input covariates exactly as they appear in the phenotype file with quotations around each input and separate by a comma, no spaces.
    ex) "sex","age","PC1"
  type: string
  sbg:exposed: true
- id: prediction_summary_output
  doc: |-
    A separate file that will contain some additional information on the predictions (such as number of snps in the gene's models, number of snps used, etc).
  type: string
  sbg:exposed: true
- id: prediction_output
  doc: Specify output (and output type) of predicted expression matrix
  type: string
  sbg:exposed: true
- id: on_the_fly_mapping
  doc: |-
    Optional. Specify a pattern to build a variant id from genotype variant properties. e.g. --on_the_fly_mapping METADATA "chr{}_{}_{}_{}_b38" will take the genotype variant's chromosome, position, alleles to build a variant id like chr1_123_A_G_b38. This will use the genotype properties, or if liftover is specified, the lifted coordinates.
  type: string?
  sbg:exposed: true
- id: model_db_snp_key
  doc: |-
    Optional. If provided, will load variant ids from an alternative column in the db. By default, PrediXcan uses rsids, and this works with Elastic Net models. For the more sophisticated MASHR models, --model_db_snp_key varID must be specified with this argument.
  type: string?
  sbg:exposed: true
- id: vcf_mode
  doc: |-
    -"genotyped" is meant for phased, genotyped vcfs that contain counts of each allele at each chromosome pair.
    -"imputed" will load DS field as dosage. This is meant to work with imputed vcfs as generated by the Michigan Imputation Server.
  type: string?
  sbg:exposed: true
- id: vcf_genotypes
  doc: Pattern of vcf genotype files.
  type: File[]?
  sbg:x: -620
  sbg:y: -137

outputs:
- id: Association_output
  type: File
  outputSource:
  - association/Association_output
  sbg:x: 180
  sbg:y: -100
- id: summary
  type: File?
  outputSource:
  - predict/summary
  sbg:x: -241
  sbg:y: 62

steps:
- id: predict
  label: Predict
  in:
  - id: model_db_path
    source: model_db_path
  - id: vcf_genotypes
    source:
    - vcf_genotypes
  - id: vcf_mode
    source: vcf_mode
  - id: prediction_summary_output
    source: prediction_summary_output
  - id: prediction_output
    source: prediction_output
  - id: model_db_snp_key
    source: model_db_snp_key
  - id: on_the_fly_mapping
    source: on_the_fly_mapping
  run: predixcan_unpack.cwl.steps/predict.cwl
  out:
  - id: prediction
  - id: summary
  sbg:x: -429.8598937988281
  sbg:y: -27.58841323852539
- id: association
  label: Association
  in:
  - id: gene_expression_file
    source: predict/prediction
  - id: main_phenotype_of_interest
    source: main_phenotype_of_interest
  - id: output_prefix
    source: output_prefix
  - id: kinship_matrix
    source: kinship_matrix
  - id: phenotype_file
    source: phenotype_file
  - id: covariates
    source: covariates
  run: predixcan_unpack.cwl.steps/association.cwl
  out:
  - id: Association_output
  sbg:x: -71
  sbg:y: -100
sbg:appVersion:
- v1.2
sbg:content_hash: af869e41eba0400c64bdf77ca22182cca644cf084c29981a11ec71cb9c66032fa
sbg:contributors:
- e.esquinca
sbg:createdBy: e.esquinca
sbg:createdOn: 1627587499
sbg:id: e.esquinca/individual-level-predixcan-development/predicton/5
sbg:image_url: |-
  https://platform.sb.biodatacatalyst.nhlbi.nih.gov/ns/brood/images/e.esquinca/individual-level-predixcan-development/predicton/5.png
sbg:latestRevision: 5
sbg:modifiedBy: e.esquinca
sbg:modifiedOn: 1630284836
sbg:original_source: |-
  https://api.sb.biodatacatalyst.nhlbi.nih.gov/v2/apps/e.esquinca/individual-level-predixcan-development/predicton/5/raw/
sbg:project: e.esquinca/individual-level-predixcan-development
sbg:projectName: 'BUILD: Individual Level PrediXcan Development'
sbg:publisher: sbg
sbg:revision: 5
sbg:revisionNotes: ''
sbg:revisionsInfo:
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1627587499
  sbg:revision: 0
  sbg:revisionNotes:
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1627588804
  sbg:revision: 1
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1627591230
  sbg:revision: 2
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1630283904
  sbg:revision: 3
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1630284414
  sbg:revision: 4
  sbg:revisionNotes: ''
- sbg:modifiedBy: e.esquinca
  sbg:modifiedOn: 1630284836
  sbg:revision: 5
  sbg:revisionNotes: ''
sbg:sbgMaintained: false
sbg:validationErrors: []
